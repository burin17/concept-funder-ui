{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/Messenger.js\";\nimport React from \"react\";\nimport \"./messenger.css\";\nimport { useEffect } from \"react\";\nvar stompClient = null;\nexport default function Messenger() {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentUser = _React$useState2[0],\n        setCurrentUser = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        currentChat = _React$useState4[0],\n        setCurrentChat = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        messages = _React$useState6[0],\n        setMessages = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLoaded = _React$useState8[0],\n        loaded = _React$useState8[1];\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    }).then(() => connect());\n    await fetch(\"http://localhost:18080/tech-support/unresolved\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentChat(data);\n      fetch(\"http://localhost:18080/tech-support/chat/\" + data.chatId, {\n        method: 'GET',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(response => response.json()).then(data => {\n        setMessages(data);\n      }).then(() => loaded(true));\n    }).catch(() => {\n      fetch(\"http://localhost:18080/tech-support/start-chat\", {\n        method: 'POST',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(resp => resp.json()).then(data => {\n        setCurrentChat(data);\n        fetch(\"http://localhost:18080/tech-support/chat/\" + data.chatId, {\n          method: 'GET',\n          headers: new Headers({\n            \"Authorization\": sessionStorage.jwtToken\n          })\n        }).then(response => response.json()).then(data => {\n          setMessages(data);\n        }).then(() => loaded(true));\n      });\n    });\n  }\n\n  if (isLoaded === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n  function markAsClosed() {\n    fetch(\"http://localhost:18080/tech-support/mark-as-solved?chatId=\" + currentChat.chatId, {\n      method: \"PATCH\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    });\n    document.getElementById(\"closeBtn\").style.display = \"none\";\n  }\n\n  function send() {\n    const content = document.getElementById(\"messageContent\").value;\n    fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + currentChat.chatId + \"&content=\" + content, {\n      method: 'POST',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(resp => resp.json()).then(data => setMessages([...messages, data])).then(() => document.getElementById(\"messageContent\").value = \"\");\n  }\n\n  const connect = () => {\n    const Stomp = require(\"stompjs\");\n\n    var SockJS = require(\"sockjs-client\");\n\n    SockJS = new SockJS(\"http://localhost:19080/ws\");\n    stompClient = Stomp.over(SockJS);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\"/user/\" + currentUser.id + \"/queue/messages\", onMessageReceived);\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const onMessageReceived = msg => {\n    const message = JSON.parse(msg.body);\n    setMessages([...messages, message]);\n  };\n\n  const sendMessage = msg => {\n    if (msg.trim() !== \"\") {\n      const message = {\n        chatId: currentChat.chatId,\n        senderId: currentUser.id,\n        receiverId: currentChat.techSpecialist\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n      const newMessages = [...messages];\n      newMessages.push(message);\n      setMessages(newMessages);\n    }\n  }; // const messages = [\n  //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n  //     {content:\"Hello!\", author: {username:\"testuser\"}},\n  //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n  // ];\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"techSupportText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Tech support dialog\"), messages.length === 0 && React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"60px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Ask your question here..\"), React.createElement(\"ul\", {\n    className: \"messengerUl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, messages.map(msg => {\n    if (currentUser.username === msg.author.username) {\n      return React.createElement(\"li\", {\n        className: \"messengerLiRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, msg.content));\n    } else {\n      return React.createElement(\"li\", {\n        className: \"messengerLiLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, msg.content));\n    }\n  })), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: 30,\n    src: \"/images/att.png\",\n    alt: \"Attach\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    id: \"messageContent\",\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => send(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"button\", {\n    id: \"closeBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      marginTop: \"10px\",\n      marginLeft: '750px'\n    },\n    onClick: () => markAsClosed(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Close chat\"))));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/Messenger.js"],"names":["React","useEffect","stompClient","Messenger","useState","currentUser","setCurrentUser","currentChat","setCurrentChat","messages","setMessages","isLoaded","loaded","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","connect","chatId","catch","resp","markAsClosed","document","getElementById","style","display","send","content","value","Stomp","require","SockJS","over","onConnected","onError","console","log","subscribe","id","onMessageReceived","err","msg","message","JSON","parse","body","sendMessage","trim","senderId","receiverId","techSpecialist","stringify","newMessages","push","marginLeft","length","textAlign","padding","map","username","author","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./messenger.css\"\nimport {useEffect} from \"react\";\n\nvar stompClient = null;\nexport default function Messenger() {\n    const [currentUser, setCurrentUser] = React.useState();\n    const [currentChat, setCurrentChat] = React.useState();\n    const [messages, setMessages] = React.useState([]);\n    const [isLoaded, loaded] = React.useState(false);\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            })\n            .then(() => connect());\n\n        await fetch(`http://localhost:18080/tech-support/unresolved`,{\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                    setCurrentChat(data);\n                    fetch(`http://localhost:18080/tech-support/chat/` + data.chatId,\n                        {\n                            method: 'GET',\n                            headers: new Headers({\n                                \"Authorization\": sessionStorage.jwtToken\n                            })\n                        })\n                        .then(response => response.json())\n                        .then(data => {\n                            setMessages(data);\n                        })\n                        .then(() => loaded(true));\n            }).catch(() => {\n                fetch(\"http://localhost:18080/tech-support/start-chat\",\n                    {\n                        method: 'POST',\n                        headers: new Headers({\n                            \"Authorization\": sessionStorage.jwtToken\n                        })\n                    })\n                    .then(resp => resp.json())\n                    .then(data => {\n                            setCurrentChat(data);\n                            fetch(`http://localhost:18080/tech-support/chat/` + data.chatId,\n                                {\n                                    method: 'GET',\n                                    headers: new Headers({\n                                        \"Authorization\": sessionStorage.jwtToken\n                                    })\n                                })\n                                .then(response => response.json())\n                                .then(data => {\n                                    setMessages(data);\n                                })\n                                .then(() => loaded(true));\n                        }\n                    )\n            })\n    }\n\n    if (isLoaded === false) {\n        return <div></div>\n    }\n\n    function markAsClosed() {\n        fetch(\"http://localhost:18080/tech-support/mark-as-solved?chatId=\" + currentChat.chatId, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        })\n        document.getElementById(\"closeBtn\").style.display = \"none\";\n    }\n\n    function send() {\n        const content = document.getElementById(\"messageContent\").value;\n        fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + currentChat.chatId + \"&content=\" + content,\n            {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            }).then(resp => resp.json())\n              .then(data => setMessages([...messages, data]))\n                .then(() => document.getElementById(\"messageContent\").value = \"\");\n    }\n\n    const connect = () => {\n        const Stomp = require(\"stompjs\");\n        var SockJS = require(\"sockjs-client\");\n        SockJS = new SockJS(\"http://localhost:19080/ws\");\n        stompClient = Stomp.over(SockJS);\n        stompClient.connect({}, onConnected, onError);\n    };\n\n    const onConnected = () => {\n        console.log(\"connected\");\n        console.log(currentUser);\n        stompClient.subscribe(\n            \"/user/\" + currentUser.id + \"/queue/messages\",\n            onMessageReceived\n        );\n    };\n\n    const onError = (err) => {\n        console.log(err);\n    };\n\n\n    const onMessageReceived = (msg) => {\n        const message = JSON.parse(msg.body);\n        setMessages([...messages, message]);\n    };\n\n    const sendMessage = (msg) => {\n        if (msg.trim() !== \"\") {\n            const message = {\n                chatId: currentChat.chatId,\n                senderId: currentUser.id,\n                receiverId: currentChat.techSpecialist,\n                \n            };\n            stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n\n            const newMessages = [...messages];\n            newMessages.push(message);\n            setMessages(newMessages);\n        }\n    };\n\n    // const messages = [\n    //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n    //     {content:\"Hello!\", author: {username:\"testuser\"}},\n    //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n    // ];\n\n    return (\n        <div>\n            <li style={{marginLeft: 35}}>\n                <div className=\"bg-light m-5 p-3 fpWrapper\">\n                    <div className=\"techSupportText\">Tech support dialog</div>\n                    {messages.length === 0 &&\n                        <div style={{textAlign: \"center\", padding: \"60px\"}}>Ask your question here..</div>\n                    }\n                    <ul className=\"messengerUl\">\n                        {messages.map(msg => {\n                                if (currentUser.username === msg.author.username) {\n                                    return <li className=\"messengerLiRight\">\n                                            <div className=\"msgContentWrapper\">{msg.content}</div>\n                                           </li>\n                                } else {\n                                    return <li className=\"messengerLiLeft\">\n                                            <div className=\"msgContentWrapper\">{msg.content}</div>\n                                           </li>\n                                }\n                            })\n                        }\n                    </ul>\n\n                    <div className=\"input-group\">\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\"><img width={30} src=\"/images/att.png\" alt=\"Attach\"/></button>\n                        <input id=\"messageContent\" type=\"text\" className=\"form-control\" aria-describedby=\"basic-addon2\"/>\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\" onClick={() => send()}>Send</button>\n                    </div>\n                    <button id=\"closeBtn\" type=\"button\" className=\"btn btn-primary\"\n                            style={{marginTop: \"10px\", marginLeft: '750px'}}\n                            onClick={() => markAsClosed()}>\n                        Close chat\n                    </button>\n                </div>\n            </li>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}