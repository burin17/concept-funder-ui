{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/ChatList.js\";\nimport React from 'react';\nimport Chat from \"./Chat\";\nexport default function ChatList() {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        chats = _React$useState2[0],\n        setChats = _React$useState2[1];\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, fps !== undefined && fps.map(fp => {\n    return React.createElement(Chat, {\n      fp: fp,\n      isModeration: false,\n      isSelfProfile: false,\n      isCurrentUser: fp.founder.id === currentUser.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/ChatList.js"],"names":["React","Chat","ChatList","useState","chats","setChats","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","setCurrentUser","fps","undefined","map","fp","founder","id","currentUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,0BACLF,KAAK,CAACG,QAAN,CAAe,EAAf,CADK;AAAA;AAAA,QACxBC,KADwB;AAAA,QACjBC,QADiB;;AAG/B,iBAAeC,QAAf,GAA0B;AACtB,UAAMC,KAAK,4CACP;AACIC,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,yBAAiBC,cAAc,CAACC;AADf,OAAZ;AAFb,KADO,CAAL,CAODC,IAPC,CAOIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPhB,EAQDF,IARC,CAQIG,IAAI,IAAI;AACVC,MAAAA,cAAc,CAACD,IAAD,CAAd;AACH,KAVC,CAAN;AAWH;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,GAAG,KAAKC,SAAR,IAAqBD,GAAG,CAACE,GAAJ,CAAQC,EAAE,IAAI;AAChC,WAAO,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,EAAV;AAAc,MAAA,YAAY,EAAE,KAA5B;AAAmC,MAAA,aAAa,EAAE,KAAlD;AAAyD,MAAA,aAAa,EAAEA,EAAE,CAACC,OAAH,CAAWC,EAAX,KAAkBC,WAAW,CAACD,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFqB,CAD1B,CADJ;AAOH","sourcesContent":["import React from 'react'\nimport Chat from \"./Chat\";\n\nexport default function ChatList() {\n    const [chats, setChats] = React.useState([]);\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            })\n    }\n\n    return (\n        <ul className=\"wrapper\">\n            {fps !== undefined && fps.map(fp => {\n                return <Chat fp={fp} isModeration={false} isSelfProfile={false} isCurrentUser={fp.founder.id === currentUser.id}/>\n            })}\n        </ul>\n    );\n}"]},"metadata":{},"sourceType":"module"}