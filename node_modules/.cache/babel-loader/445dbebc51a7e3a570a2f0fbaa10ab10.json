{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\nimport web3 from '../contract/web3';\nimport { useParams } from \"react-router-dom\";\nimport FundraisingProject from \"./FundraisingProject\";\nimport PayoutRequest from \"../PayoutRequest\";\nimport '../fundraisingProjects.css';\nexport default function FundraisingProjectDetails() {\n  const _useParams = useParams(),\n        fpId = _useParams.fpId;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        fProj = _React$useState2[0],\n        setFp = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        payoutRequests = _React$useState4[0],\n        setPayoutRequests = _React$useState4[1];\n\n  let currentUserId;\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        accounts = _React$useState6[0],\n        setAccounts = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isPayoutRequestAvailable = _React$useState8[0],\n        setIsPayoutRequestAvailable = _React$useState8[1];\n\n  useEffect(() => {\n    fetch(\"http://localhost:18080/fundraising-projects/\" + fpId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(data => {\n      setFp(data);\n      return fetch(\"http://localhost:18080/payout-requests/\" + data.fundraisingProjectId, {\n        method: 'GET',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      });\n    }).then(response => response.json()).then(data => {\n      setPayoutRequests(data);\n      console.log(data);\n    }).then(response => response.json()).then(data => {\n      return fetch(\"http://localhost:18080/user/selfProfile\", {\n        method: 'GET',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      });\n    }).then(response => response.json()).then(data => {\n      currentUserId = data.userId;\n      console.log(currentUserId);\n      console.log(fProj.status);\n\n      if (currentUserId == fProj.founder.userId && fProj.status == \"SUCCESSFULLY_FINISHED\") {\n        setIsPayoutRequestAvailable(true);\n      }\n    });\n    web3.eth.getAccounts().then(accounts => {\n      setAccounts(accounts);\n    });\n  }, [fpId]);\n\n  if (fProj === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  function invest() {\n    const ethAmount = document.getElementById(\"ethAmount\").value;\n    const contractAddress = fProj.contractAddress;\n    crowdfundProject(contractAddress).methods.contribute().send({\n      from: accounts[0],\n      value: web3.utils.toWei(String(ethAmount), 'ether')\n    }).then(res => {\n      const currentAmount = parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000;\n      fProj.currentAmount = currentAmount;\n      fetch(\"http://localhost:18080/fundraising-projects/invest?id=\" + fProj.fundraisingProjectId + \"&currentAmount=\" + currentAmount, {\n        method: 'POST',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(response => response.json()).then(data => {\n        setFp(data);\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, fProj.title), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, fProj.description), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"User: \", fProj.founder.username), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Goal: \", fProj.amountGoal, \" ETH\"), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Due date: \", fProj.duration.substring(0, fProj.duration.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Days: \", fProj.days), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Raised: \", fProj.currentAmount, \" ETH\")), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Tags:\"), React.createElement(\"div\", {\n    className: \"input-group m-2 w-25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"ethAmount\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"ETH amount\",\n    \"aria-label\": \"ETH amount\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => invest(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Contribute\")), isPayoutRequestAvailable && React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Request payout\"))), React.createElement(\"h3\", {\n    style: {\n      marginLeft: 80,\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Requests for pay out:\"), React.createElement(\"ul\", {\n    style: {\n      listStyle: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, payoutRequests.map(payoutRequest => {\n    return React.createElement(PayoutRequest, {\n      pr: payoutRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js"],"names":["React","useState","useEffect","crowdfundProject","web3","useParams","FundraisingProject","PayoutRequest","FundraisingProjectDetails","fpId","fProj","setFp","payoutRequests","setPayoutRequests","currentUserId","accounts","setAccounts","isPayoutRequestAvailable","setIsPayoutRequestAvailable","fetch","method","headers","Headers","sessionStorage","jwtToken","then","data","fundraisingProjectId","response","json","console","log","userId","status","founder","eth","getAccounts","undefined","invest","ethAmount","document","getElementById","value","contractAddress","methods","contribute","send","from","utils","toWei","String","res","currentAmount","parseInt","events","FundingReceived","returnValues","currentTotal","marginLeft","title","description","username","amountGoal","duration","substring","indexOf","days","color","listStyle","map","payoutRequest"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\nimport web3 from '../contract/web3';\nimport {useParams} from \"react-router-dom\";\nimport FundraisingProject from \"./FundraisingProject\";\nimport PayoutRequest from\"../PayoutRequest\"\nimport '../fundraisingProjects.css';\n\nexport default function FundraisingProjectDetails() {\n    const {fpId} = useParams()\n    const [fProj, setFp] = React.useState();\n    const [payoutRequests, setPayoutRequests] = React.useState([]);\n    let currentUserId;\n    const [accounts, setAccounts] = React.useState([]);\n    const [isPayoutRequestAvailable, setIsPayoutRequestAvailable] = React.useState(false);\n\n    useEffect(() =>{\n        fetch(`http://localhost:18080/fundraising-projects/` + fpId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(data => {\n                setFp(data);\n                return fetch(`http://localhost:18080/payout-requests/` + data.fundraisingProjectId,\n                    {\n                        method: 'GET',\n                        headers: new Headers({\n                            \"Authorization\": sessionStorage.jwtToken\n                        })\n                    })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setPayoutRequests(data);\n                console.log(data);\n            })\n            .then(response => response.json())\n            .then(data => {\n                return fetch(`http://localhost:18080/user/selfProfile`,\n                    {\n                        method: 'GET',\n                        headers: new Headers({\n                            \"Authorization\": sessionStorage.jwtToken\n                        })\n                    });\n            })\n            .then(response => response.json())\n            .then(data => {\n                currentUserId = data.userId;\n                console.log(currentUserId);\n                console.log(fProj.status);\n                if(currentUserId == fProj.founder.userId && fProj.status == \"SUCCESSFULLY_FINISHED\") {\n                    setIsPayoutRequestAvailable(true);\n                }\n            })\n        web3.eth.getAccounts().then((accounts) => {\n            setAccounts(accounts);\n        });\n    }, [fpId])\n\n    if (fProj === undefined) {\n        return <div></div>\n    }\n\n    function invest() {\n        const ethAmount = document.getElementById(\"ethAmount\").value;\n        const contractAddress = fProj.contractAddress;\n        crowdfundProject(contractAddress).methods.contribute().send({\n            from: accounts[0],\n            value: web3.utils.toWei(String(ethAmount), 'ether'),\n        }).then((res) => {\n            const currentAmount = (parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000);\n            fProj.currentAmount = currentAmount;\n            fetch(`http://localhost:18080/fundraising-projects/invest?id=` + fProj.fundraisingProjectId\n                + \"&currentAmount=\" + currentAmount, {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    setFp(data);\n                });\n        });\n    }\n\n    return (\n        <div>\n            <li style={{marginLeft: 35}}>\n                <div className=\"bg-light m-5 p-3 fpWrapper\">\n                    <h2 className=\"p-3\">{fProj.title}</h2>\n                    <div className=\"p-3\">{fProj.description}</div>\n                    <div className=\"row p-3\">\n                        <div className=\"col-sm\">User: {fProj.founder.username}</div>\n                        <div className=\"col-sm\">Goal: {fProj.amountGoal} ETH</div>\n                        <div className=\"col-sm\">Due date: {fProj.duration.substring(0, fProj.duration.indexOf('T'))}</div>\n                        <div className=\"col-sm\">Days: {fProj.days}</div>\n                        <div className=\"col-sm\">Raised: {fProj.currentAmount} ETH</div>\n                    </div>\n                    <div className=\"p-3\">Tags:</div>\n                    <div className=\"input-group m-2 w-25\">\n                        <input id=\"ethAmount\" type=\"text\" className=\"form-control\" placeholder=\"ETH amount\"\n                               aria-label=\"ETH amount\" aria-describedby=\"basic-addon2\"/>\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\"\n                                onClick={() => invest()}>Contribute\n                        </button>\n                    </div>\n                    {isPayoutRequestAvailable &&\n                        <button id=\"startBtn\" type=\"button\" className=\"m-2 btn btn-primary\">Request payout</button>\n                    }\n                </div>\n            </li>\n            <h3 style={{marginLeft: 80, color: \"#fff\"}}>Requests for pay out:</h3>\n            <ul style={{listStyle: \"none\"}}>\n                {payoutRequests.map(payoutRequest => {\n                    return <PayoutRequest pr={payoutRequest}/>\n                })}\n            </ul>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}