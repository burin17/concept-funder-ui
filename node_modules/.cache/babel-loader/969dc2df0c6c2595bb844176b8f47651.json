{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport web3 from '../contract/web3';\nimport { useParams } from \"react-router-dom\";\nimport PayoutRequest from \"../PayoutRequest\";\nimport '../fundraisingProjects.css';\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\nexport default function FundraisingProjectDetails() {\n  const _useParams = useParams(),\n        fpId = _useParams.fpId;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        fProj = _React$useState2[0],\n        setFp = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        payoutRequests = _React$useState4[0],\n        setPayoutRequests = _React$useState4[1];\n\n  const _React$useState5 = React.useState(),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        currentUser = _React$useState6[0],\n        setCurrentUser = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        accounts = _React$useState8[0],\n        setAccounts = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        isLoaded = _React$useState10[0],\n        loaded = _React$useState10[1];\n\n  const _React$useState11 = React.useState(false),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        isDurationAvailable = _React$useState12[0],\n        setIsDurationAvailable = _React$useState12[1];\n\n  useEffect(() => {\n    loadData();\n  }, [fpId]);\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/fundraising-projects/\" + fpId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setFp(data);\n      setIsDurationAvailable(data.duration != undefined);\n    });\n    await fetch(\"http://localhost:18080/payout-requests/\" + fpId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setPayoutRequests(data);\n    });\n    console.log(payoutRequests);\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    });\n    await web3.eth.getAccounts().then(accounts => {\n      setAccounts(accounts);\n      loaded(true);\n    });\n  }\n\n  if (isLoaded === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n  async function invest() {\n    const ethAmount = document.getElementById(\"ethAmount\").value;\n    const contractAddress = fProj.contractAddress;\n    await crowdfundProject(contractAddress).methods.contribute().send({\n      from: accounts[0],\n      value: web3.utils.toWei(String(ethAmount), 'ether')\n    }).then(res => {\n      const currentAmount = parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000;\n      fProj.currentAmount = currentAmount;\n      return fetch(\"http://localhost:18080/fundraising-projects/invest?id=\" + fProj.fundraisingProjectId + \"&currentAmount=\" + currentAmount + \"&investor=\" + currentUser.id + \"&ethAmount=\" + ethAmount, {\n        method: 'POST',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      });\n    }).then(response => response.json()).then(data => {\n      setFp(data);\n    });\n  }\n\n  function setRPFormVisibility(isVisible) {\n    if (isVisible) {\n      document.getElementById(\"formWrapper\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"formWrapper\").style.display = \"none\";\n    }\n  }\n\n  async function requestPayout() {\n    const ethAmount = document.getElementById(\"etherAmount\").value;\n    const intention = document.getElementById(\"intention\").value;\n    const reporting = document.getElementById(\"reporting\").value;\n    const days = document.getElementById(\"days\").value;\n    console.log(fProj);\n    let requiredCountOfApproves;\n    let requestIdx = await crowdfundProject(fProj.contractAddress).methods.payOutRequst(web3.utils.toWei(String(fProj.amountGoal), 'ether'), intention, reporting, days).send({\n      from: accounts[0]\n    }).then(res => {\n      console.log(res.events.PayoutRequestCreated.returnValues);\n      requiredCountOfApproves = res.events.PayoutRequestCreated.returnValues.requiredCountOfApproves;\n      return res.events.PayoutRequestCreated.returnValues.requestIdx;\n    }); // update balance when payout happens\n    // await fetch(\"http://localhost:18080/fundraising-projects//updateCurrentBalance?id = \" + fpId\n    //     + \"&currentBalance=\" + )\n\n    await fetch(\"http://localhost:18080/payout-requests/create\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken,\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        \"ethAmount\": ethAmount,\n        \"intention\": intention,\n        \"reporting\": reporting,\n        \"days\": days,\n        \"fundraisingProjectId\": fpId,\n        \"requestIdx\": requestIdx,\n        \"requiredAmountOfApproves\": requiredCountOfApproves\n      })\n    }).then(resp => resp.json()).then(data => {\n      let prs = payoutRequests;\n      prs.push(data);\n      setPayoutRequests(prs);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"formWrapper\",\n    className: \"auth-wrapper\",\n    style: {\n      position: \"absolute\",\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Request for payout\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Ether amount\"), React.createElement(\"input\", {\n    id: \"etherAmount\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Ether amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Intention\"), React.createElement(\"input\", {\n    id: \"intention\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Intention\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Reporting\"), React.createElement(\"input\", {\n    id: \"reporting\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Reporting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Days\"), React.createElement(\"input\", {\n    id: \"days\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block\",\n    onClick: () => requestPayout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Request\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-block\",\n    style: {\n      marginLeft: \"175px\"\n    },\n    onClick: () => setRPFormVisibility(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Cancel\")))), React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, fProj.title), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, fProj.description), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"User: \", fProj.founder.username), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Goal: \", fProj.amountGoal, \" ETH\"), isDurationAvailable > 0 && React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Due date: \", fProj.duration.substring(0, fProj.duration.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Days: \", fProj.days), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Raised: \", fProj.currentAmount, \" ETH\")), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Tags:\"), fProj.founder.id != currentUser.id && React.createElement(\"div\", {\n    className: \"input-group m-2 w-25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"ethAmount\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"ETH amount\",\n    \"aria-label\": \"ETH amount\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => invest(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Contribute\")), fProj.founder.id == currentUser.id && fProj.status == \"FINANCED\" && React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => setRPFormVisibility(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Request payout\"))), React.createElement(\"h3\", {\n    style: {\n      marginLeft: 80,\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Requests for pay out:\"), React.createElement(\"ul\", {\n    style: {\n      listStyle: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, payoutRequests.map(payoutRequest => {\n    return React.createElement(PayoutRequest, {\n      pr: payoutRequest,\n      fpId: fProj.fundraisingProjectId,\n      account: accounts[0],\n      currentUserId: currentUser.id,\n      fpContractAddress: fProj.contractAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js"],"names":["React","useLayoutEffect","useState","useEffect","web3","useParams","PayoutRequest","crowdfundProject","FundraisingProjectDetails","fpId","fProj","setFp","payoutRequests","setPayoutRequests","currentUser","setCurrentUser","accounts","setAccounts","isLoaded","loaded","isDurationAvailable","setIsDurationAvailable","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","duration","undefined","console","log","eth","getAccounts","invest","ethAmount","document","getElementById","value","contractAddress","methods","contribute","send","from","utils","toWei","String","res","currentAmount","parseInt","events","FundingReceived","returnValues","currentTotal","fundraisingProjectId","id","setRPFormVisibility","isVisible","style","display","requestPayout","intention","reporting","days","requiredCountOfApproves","requestIdx","payOutRequst","amountGoal","PayoutRequestCreated","body","JSON","stringify","resp","prs","push","marginLeft","position","title","description","founder","username","substring","indexOf","status","color","listStyle","map","payoutRequest"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport web3 from '../contract/web3';\nimport {useParams} from \"react-router-dom\";\nimport PayoutRequest from\"../PayoutRequest\"\nimport '../fundraisingProjects.css';\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\n\nexport default function FundraisingProjectDetails() {\n    const {fpId} = useParams()\n    const [fProj, setFp] = React.useState();\n    const [payoutRequests, setPayoutRequests] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState();\n    const [accounts, setAccounts] = React.useState([]);\n    const [isLoaded, loaded] = React.useState(false);\n    const [isDurationAvailable, setIsDurationAvailable] = React.useState(false);\n\n    useEffect(() =>{\n        loadData();\n    }, [fpId])\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/fundraising-projects/` + fpId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setFp(data);\n                setIsDurationAvailable(data.duration != undefined);\n            });\n\n        await fetch(`http://localhost:18080/payout-requests/` + fpId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setPayoutRequests(data);\n            })\n        console.log(payoutRequests);\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            })\n        await web3.eth.getAccounts().then((accounts) => {\n            setAccounts(accounts);\n            loaded(true);\n        });\n    }\n\n    if (isLoaded === false) {\n        return <div></div>\n    }\n\n    async function invest() {\n        const ethAmount = document.getElementById(\"ethAmount\").value;\n        const contractAddress = fProj.contractAddress;\n        await crowdfundProject(contractAddress).methods.contribute().send({\n            from: accounts[0],\n            value: web3.utils.toWei(String(ethAmount), 'ether'),\n        }).then((res) => {\n            const currentAmount = (parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000);\n            fProj.currentAmount = currentAmount;\n            return fetch(`http://localhost:18080/fundraising-projects/invest?id=` + fProj.fundraisingProjectId\n                + \"&currentAmount=\" + currentAmount + \"&investor=\" + currentUser.id + \"&ethAmount=\" + ethAmount, {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            });\n        }).then(response => response.json())\n            .then(data => {\n                setFp(data);\n            });\n    }\n\n    function setRPFormVisibility(isVisible) {\n        if (isVisible) {\n            document.getElementById(\"formWrapper\").style.display = \"flex\";\n        } else {\n            document.getElementById(\"formWrapper\").style.display = \"none\";\n        }\n    }\n\n    async function requestPayout() {\n        const ethAmount = document.getElementById(\"etherAmount\").value;\n        const intention = document.getElementById(\"intention\").value;\n        const reporting = document.getElementById(\"reporting\").value;\n        const days = document.getElementById(\"days\").value;\n        console.log(fProj);\n        let requiredCountOfApproves;\n        let requestIdx = await crowdfundProject(fProj.contractAddress).methods.payOutRequst(\n            web3.utils.toWei(String(fProj.amountGoal), 'ether'), intention, reporting, days\n        ).send({\n            from: accounts[0],\n        }).then(res => {\n            console.log(res.events.PayoutRequestCreated.returnValues);\n            requiredCountOfApproves = res.events.PayoutRequestCreated.returnValues.requiredCountOfApproves;\n            return res.events.PayoutRequestCreated.returnValues.requestIdx;\n        });\n\n        // update balance when payout happens\n        // await fetch(\"http://localhost:18080/fundraising-projects//updateCurrentBalance?id = \" + fpId\n        //     + \"&currentBalance=\" + )\n        await fetch(\"http://localhost:18080/payout-requests/create\", {\n            method: \"POST\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken,\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({\n                \"ethAmount\": ethAmount,\n                \"intention\": intention,\n                \"reporting\": reporting,\n                \"days\": days,\n                \"fundraisingProjectId\": fpId,\n                \"requestIdx\": requestIdx,\n                \"requiredAmountOfApproves\": requiredCountOfApproves\n            })\n        }).then(resp => resp.json())\n            .then(data => {\n                let prs = payoutRequests;\n                prs.push(data);\n                setPayoutRequests(prs);\n        });\n    }\n\n    return (\n        <div>\n            <li style={{marginLeft: 35}}>\n                <div id=\"formWrapper\" className=\"auth-wrapper\" style={{position: \"absolute\", display: \"none\"}}>\n                    <div className=\"auth-inner\">\n                        <form>\n                            <h3>Request for payout</h3>\n\n                            <div className=\"form-group\">\n                                <label>Ether amount</label>\n                                <input id=\"etherAmount\" type=\"text\" className=\"form-control\" placeholder=\"Ether amount\" />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Intention</label>\n                                <input id=\"intention\" type=\"text\" className=\"form-control\" placeholder=\"Intention\" />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Reporting</label>\n                                <input id=\"reporting\" type=\"text\" className=\"form-control\" placeholder=\"Reporting\" />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Days</label>\n                                <input id=\"days\" type=\"text\" className=\"form-control\" placeholder=\"Days\" />\n                            </div>\n\n                            <br/>\n                            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => requestPayout()}>Request</button>\n                            <button type=\"button\" className=\"btn btn-secondary btn-block\" style={{marginLeft: \"175px\"}}\n                                    onClick={() => setRPFormVisibility(false)}>Cancel</button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"bg-light m-5 p-3 fpWrapper\">\n                    <h2 className=\"p-3\">{fProj.title}</h2>\n                    <div className=\"p-3\">{fProj.description}</div>\n                    <div className=\"row p-3\">\n                        <div className=\"col-sm\">User: {fProj.founder.username}</div>\n                        <div className=\"col-sm\">Goal: {fProj.amountGoal} ETH</div>\n                        {isDurationAvailable > 0 &&\n                            <div className=\"col-sm\">Due\n                                date: {fProj.duration.substring(0, fProj.duration.indexOf('T'))}</div>\n                        }\n                        <div className=\"col-sm\">Days: {fProj.days}</div>\n                        <div className=\"col-sm\">Raised: {fProj.currentAmount} ETH</div>\n                    </div>\n                    <div className=\"p-3\">Tags:</div>\n                    {fProj.founder.id != currentUser.id &&\n                        <div className=\"input-group m-2 w-25\">\n                            <input id=\"ethAmount\" type=\"text\" className=\"form-control\" placeholder=\"ETH amount\"\n                                   aria-label=\"ETH amount\" aria-describedby=\"basic-addon2\"/>\n                            <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\"\n                                    onClick={() => invest()}>Contribute\n                            </button>\n                        </div>\n                    }\n                    {fProj.founder.id == currentUser.id && fProj.status == \"FINANCED\" &&\n                        <button id=\"startBtn\" type=\"button\" className=\"m-2 btn btn-primary\"\n                                onClick={() => setRPFormVisibility(true)}>Request payout</button>\n                    }\n                </div>\n            </li>\n            <h3 style={{marginLeft: 80, color: \"#fff\"}}>Requests for pay out:</h3>\n            <ul style={{listStyle: \"none\"}}>\n                {payoutRequests.map(payoutRequest => {\n                    return <PayoutRequest pr={payoutRequest} fpId={fProj.fundraisingProjectId} account={accounts[0]} currentUserId={currentUser.id}\n                                          fpContractAddress={fProj.contractAddress}/>\n                })}\n            </ul>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}