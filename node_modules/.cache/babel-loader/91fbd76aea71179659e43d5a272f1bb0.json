{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/StartedMessenger.js\";\nimport React from \"react\";\nimport \"./messenger.css\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SockJS from \"sockjs-client\";\nvar stompClient = null;\nexport default function StartedMessenger({\n  chat\n}) {\n  const _useParams = useParams(),\n        chatId = _useParams.chatId;\n\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentUser = _React$useState2[0],\n        setCurrentUser = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        currentChat = _React$useState4[0],\n        setCurrentChat = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        messages = _React$useState6[0],\n        setMessages = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLoaded = _React$useState8[0],\n        loaded = _React$useState8[1];\n\n  const connect = () => {\n    if (stompClient !== null) {\n      stompClient.disconnect();\n    }\n\n    if (currentUser !== undefined) {\n      const Stomp = require(\"stompjs\");\n\n      var SockJS = require(\"sockjs-client\");\n\n      SockJS = new SockJS(\"http://localhost:19080/ws\");\n      stompClient = Stomp.over(SockJS);\n      stompClient.connect({}, onConnected, onError);\n    }\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\"/user/\" + currentUser.id + \"/queue/messages\", onMessageReceived);\n  };\n\n  const onError = err => {\n    console.log(\"err to connect\");\n    console.log(err);\n  };\n\n  const onMessageReceived = msg => {\n    fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n      return data;\n    }).then(data => {\n      if (JSON.parse(msg.body).author.id != data.id) {\n        console.log(\"current user id = \" + currentUser.id);\n        console.log(\"author id = \" + JSON.parse(msg.body).author.id);\n        const message = JSON.parse(msg.body); // setMessages([...messages, message]);\n\n        document.getElementById(\"messengerUl\").innerHTML += \"\\n                    <li class=\\\"messengerLiLeft\\\">\\n                        <div class=\\\"msgContentWrapper\\\">\".concat(message.content, \"</div>\\n                    </li>\\n                \");\n\n        if (document.getElementById(\"noMessagesText\") != null) {\n          document.getElementById(\"noMessagesText\").style.display = \"none\";\n        }\n      }\n    });\n  };\n\n  const sendMessage = () => {\n    let message = {\n      chatId: currentChat.chatId,\n      senderId: currentUser.id,\n      receiverId: currentChat.startedBy.id,\n      content: document.getElementById(\"messageContent\").value\n    };\n    stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n    message.author = {};\n    message.author.username = currentUser.username; // const newMessages = [...messages];\n    // newMessages.push(message);\n    // setMessages(newMessages);\n\n    document.getElementById(\"messageContent\").value = \"\";\n    document.getElementById(\"messengerUl\").innerHTML += \"\\n            <li class=\\\"messengerLiRight\\\">\\n                <div class=\\\"msgContentWrapper\\\">\".concat(message.content, \"</div>\\n            </li>\\n        \");\n\n    if (document.getElementById(\"noMessagesText\") != null) {\n      document.getElementById(\"noMessagesText\").style.display = \"none\";\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => connect(), [currentUser]);\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    });\n    await fetch(\"http://localhost:18080/tech-support/chat/\" + chatId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setMessages(data);\n    });\n    await fetch(\"http://localhost:18080/tech-support/\" + chatId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentChat(data);\n\n      if (data.techSpecialist == null) {\n        console.log(\"data.techSpecialist === undefined\");\n        fetch(\"http://localhost:18080/tech-support/start-support?chatId=\" + chatId, {\n          method: 'PATCH',\n          headers: new Headers({\n            \"Authorization\": sessionStorage.jwtToken\n          })\n        }).then(response => response.json());\n      }\n    }).then(() => loaded(true));\n  }\n\n  if (isLoaded === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    });\n  }\n\n  function send() {\n    const content = document.getElementById(\"messageContent\").value;\n    fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + chatId + \"&content=\" + content, {\n      method: 'POST',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(resp => resp.json()).then(data => setMessages([...messages, data])).then(() => document.getElementById(\"messageContent\").value = \"\");\n  } // const messages = [\n  //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n  //     {content:\"Hello!\", author: {username:\"testuser\"}},\n  //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n  // ];\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"techSupportText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Tech support dialog\"), messages.length === 0 && React.createElement(\"div\", {\n    id: \"noMessagesText\",\n    style: {\n      textAlign: \"center\",\n      padding: \"60px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Ask your question here..\"), React.createElement(\"ul\", {\n    id: \"messengerUl\",\n    className: \"messengerUl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, messages.map(msg => {\n    if (currentUser.username === msg.author.username) {\n      return React.createElement(\"li\", {\n        className: \"messengerLiRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, msg.content));\n    } else {\n      return React.createElement(\"li\", {\n        className: \"messengerLiLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, msg.content));\n    }\n  })), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: 30,\n    src: \"/images/att.png\",\n    alt: \"Attach\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    id: \"messageContent\",\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => sendMessage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/StartedMessenger.js"],"names":["React","useEffect","useParams","SockJS","stompClient","StartedMessenger","chat","chatId","useState","currentUser","setCurrentUser","currentChat","setCurrentChat","messages","setMessages","isLoaded","loaded","connect","disconnect","undefined","Stomp","require","over","onConnected","onError","console","log","subscribe","id","onMessageReceived","err","msg","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","JSON","parse","body","author","message","document","getElementById","innerHTML","content","style","display","sendMessage","senderId","receiverId","startedBy","value","send","stringify","username","loadData","techSpecialist","resp","marginLeft","length","textAlign","padding","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./messenger.css\"\nimport {useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport SockJS from \"sockjs-client\";\n\nvar stompClient = null;\nexport default function StartedMessenger({chat}) {\n    const {chatId} = useParams()\n    const [currentUser, setCurrentUser] = React.useState();\n    const [currentChat, setCurrentChat] = React.useState();\n    const [messages, setMessages] = React.useState([]);\n    const [isLoaded, loaded] = React.useState(false);\n\n    const connect = () => {\n        if (stompClient !== null) {\n            stompClient.disconnect();\n        }\n        if (currentUser !== undefined) {\n            const Stomp = require(\"stompjs\");\n            var SockJS = require(\"sockjs-client\");\n            SockJS = new SockJS(\"http://localhost:19080/ws\");\n            stompClient = Stomp.over(SockJS);\n            stompClient.connect({}, onConnected, onError);\n        }\n    };\n\n    const onConnected = () => {\n            console.log(\"connected\");\n            console.log(currentUser);\n            stompClient.subscribe(\n                \"/user/\" + currentUser.id + \"/queue/messages\",\n                onMessageReceived\n            );\n    };\n\n    const onError = (err) => {\n        console.log(\"err to connect\")\n        console.log(err);\n    };\n\n    const onMessageReceived = (msg) => {\n        fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n                return data;\n            }).then((data) => {\n                if (JSON.parse(msg.body).author.id != data.id) {\n                    console.log(\"current user id = \" + currentUser.id);\n                    console.log(\"author id = \" + JSON.parse(msg.body).author.id);\n                    const message = JSON.parse(msg.body);\n                    // setMessages([...messages, message]);\n                    document.getElementById(\"messengerUl\").innerHTML += `\n                    <li class=\"messengerLiLeft\">\n                        <div class=\"msgContentWrapper\">${message.content}</div>\n                    </li>\n                `\n                    if (document.getElementById(\"noMessagesText\") != null) {\n                        document.getElementById(\"noMessagesText\").style.display = \"none\";\n                    }\n                }});\n    }\n\n    const sendMessage = () => {\n        let message = {\n                chatId: currentChat.chatId,\n                senderId: currentUser.id,\n                receiverId: currentChat.startedBy.id,\n                content: document.getElementById(\"messageContent\").value,\n            };\n        stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n\n        message.author = {};\n        message.author.username = currentUser.username;\n\n\n        // const newMessages = [...messages];\n        // newMessages.push(message);\n        // setMessages(newMessages);\n\n        document.getElementById(\"messageContent\").value = \"\";\n        document.getElementById(\"messengerUl\").innerHTML += `\n            <li class=\"messengerLiRight\">\n                <div class=\"msgContentWrapper\">${message.content}</div>\n            </li>\n        `\n        if (document.getElementById(\"noMessagesText\") != null) {\n            document.getElementById(\"noMessagesText\").style.display = \"none\";\n        }\n    };\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n    useEffect(() => connect(),[currentUser]);\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            });\n\n        await fetch(`http://localhost:18080/tech-support/chat/` + chatId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setMessages(data);\n            })\n\n        await fetch(`http://localhost:18080/tech-support/` + chatId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentChat(data);\n                if (data.techSpecialist == null) {\n                    console.log(\"data.techSpecialist === undefined\");\n                    fetch(`http://localhost:18080/tech-support/start-support?chatId=` + chatId,\n                        {\n                            method: 'PATCH',\n                            headers: new Headers({\n                                \"Authorization\": sessionStorage.jwtToken\n                            })\n                        })\n                        .then(response => response.json());\n                }\n            }).then(() => loaded(true));\n    }\n\n    if (isLoaded === false) {\n        return <div></div>\n    }\n\n    function send() {\n        const content = document.getElementById(\"messageContent\").value;\n        fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + chatId + \"&content=\" + content,\n            {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            }).then(resp => resp.json())\n            .then(data => setMessages([...messages, data]))\n            .then(() => document.getElementById(\"messageContent\").value = \"\");\n    }\n\n    // const messages = [\n    //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n    //     {content:\"Hello!\", author: {username:\"testuser\"}},\n    //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n    // ];\n\n    return (\n        <div>\n            <li style={{marginLeft: 35}}>\n                <div className=\"bg-light m-5 p-3 fpWrapper\">\n                    <div className=\"techSupportText\">Tech support dialog</div>\n                    {messages.length === 0 &&\n                        <div id=\"noMessagesText\" style={{textAlign: \"center\", padding: \"60px\"}}>Ask your question here..</div>\n                    }\n                    <ul id=\"messengerUl\" className=\"messengerUl\">\n                        {messages.map(msg => {\n                            if (currentUser.username === msg.author.username) {\n                                return <li className=\"messengerLiRight\">\n                                    <div className=\"msgContentWrapper\">{msg.content}</div>\n                                </li>\n                            } else {\n                                return <li className=\"messengerLiLeft\">\n                                    <div className=\"msgContentWrapper\">{msg.content}</div>\n                                </li>\n                            }\n                        })\n                        }\n                    </ul>\n\n                    <div className=\"input-group\">\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\"><img width={30} src=\"/images/att.png\" alt=\"Attach\"/></button>\n                        <input id=\"messageContent\" type=\"text\" className=\"form-control\" aria-describedby=\"basic-addon2\"/>\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\" onClick={() => sendMessage()}>Send</button>\n                    </div>\n                </div>\n            </li>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}