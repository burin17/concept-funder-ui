{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport web3 from \"./contract/web3\";\nimport crowdfundProject from './contract/crowdfundProjectInstance';\nimport data from \"bootstrap/js/src/dom/data\";\nexport default function PayoutRequest({\n  pr,\n  fpId,\n  account,\n  currentUserId,\n  fpContractAddress\n}) {\n  const _React$useState = React.useState(pr),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        payoutRequest = _React$useState2[0],\n        setPayoutRequest = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isInvestor = _React$useState4[0],\n        setIsInvestor = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isApproved = _React$useState6[0],\n        setIsApproved = _React$useState6[1];\n\n  useEffect(() => {\n    setPayoutRequest(pr);\n    loadData();\n  }, [pr]);\n\n  async function loadData() {\n    // isCurrentUser investor\n    await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsInvestor(data);\n    });\n    await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsApproved(data);\n      console.log(2);\n    });\n  }\n\n  function approve() {\n    crowdfundProject(fpContractAddress).methods.approveRequest(pr.requestIdx).send({\n      from: account\n    }).then(res => {\n      console.log(res.events.Approved.returnValues);\n      return parseInt(res.events.Approved.returnValues.countOfApproves);\n    }).then(countOfApproves => fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" + pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n      method: \"POST\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    })).then(resp => resp.json()).then(data => {\n      setPayoutRequest(data);\n    }).then(data => {\n      setIsApproved(true);\n    });\n  }\n\n  function setReportFormVisibility(isVisible) {\n    if (isVisible) {\n      document.getElementById(\"formWrapper\").style.display = \"absolute\";\n    } else {\n      document.getElementById(\"formWrapper\").style.display = \"none\";\n    }\n  }\n\n  function addReport() {}\n\n  return React.createElement(\"li\", {\n    key: pr,\n    style: {\n      marginLeft: \"-30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"formWrapper\",\n    className: \"auth-wrapper\",\n    style: {\n      position: \"absolute\",\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Request for payout\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Ether amount\"), React.createElement(\"input\", {\n    id: \"etherAmount\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Ether amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Intention\"), React.createElement(\"textarea\", {\n    id: \"intention\",\n    className: \"form-control\",\n    placeholder: \"Intention\",\n    style: {\n      height: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Reporting\"), React.createElement(\"textarea\", {\n    id: \"reporting\",\n    className: \"form-control\",\n    placeholder: \"Reporting\",\n    style: {\n      height: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Days\"), React.createElement(\"input\", {\n    id: \"days\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block\",\n    onClick: () => addReport(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Request\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-block\",\n    style: {\n      marginLeft: \"175px\"\n    },\n    onClick: () => setReportFormVisibility(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Cancel\")))), React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    style: {\n      borderRadius: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Requested sum: \", payoutRequest.ethAmount), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Intention: \", payoutRequest.intention), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Promised report: \", payoutRequest.reporting), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Due date: \", payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Count of approves: \", payoutRequest.countOfApproves), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Required amount of approves: \", payoutRequest.requiredAmountOfApproves)), isInvestor && !isApproved && React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => approve(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Approve\"), currentUserId === payoutRequest.fundraisingProject.founder.id && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"addReport\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => setReportFormVisibility(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Add report\"))));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js"],"names":["React","useState","useEffect","web3","crowdfundProject","data","PayoutRequest","pr","fpId","account","currentUserId","fpContractAddress","payoutRequest","setPayoutRequest","isInvestor","setIsInvestor","isApproved","setIsApproved","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","id","console","log","approve","methods","approveRequest","requestIdx","send","from","res","events","Approved","returnValues","parseInt","countOfApproves","resp","setReportFormVisibility","isVisible","document","getElementById","style","display","addReport","marginLeft","position","height","borderRadius","ethAmount","intention","reporting","achieveBy","substring","indexOf","requiredAmountOfApproves","fundraisingProject","founder"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport web3 from \"./contract/web3\";\nimport crowdfundProject from './contract/crowdfundProjectInstance';\nimport data from \"bootstrap/js/src/dom/data\";\n\nexport default function PayoutRequest({pr, fpId, account, currentUserId, fpContractAddress}) {\n    const [payoutRequest, setPayoutRequest] = React.useState(pr);\n    const [isInvestor, setIsInvestor] = React.useState(false);\n    const [isApproved, setIsApproved] = React.useState(false);\n\n    useEffect(() =>{\n        setPayoutRequest(pr);\n        loadData();\n    }, [pr])\n\n    async function loadData() {\n        // isCurrentUser investor\n        await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsInvestor(data);\n            });\n        await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsApproved(data);\n                console.log(2)\n        });\n    }\n\n\n    function approve() {\n        crowdfundProject(fpContractAddress).methods.approveRequest(pr.requestIdx).send({\n            from: account\n        }).then(res => {\n            console.log(res.events.Approved.returnValues);\n            return parseInt(res.events.Approved.returnValues.countOfApproves);\n        }).then(countOfApproves =>\n            fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" +\n            pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n            method: \"POST\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken,\n            }),\n        }))\n            .then(resp => resp.json())\n          .then(data => {\n            setPayoutRequest(data);\n        }).then(data => {\n            setIsApproved(true);\n        })\n    }\n\n    function setReportFormVisibility(isVisible) {\n        if (isVisible) {\n            document.getElementById(\"formWrapper\").style.display = \"absolute\";\n        } else {\n            document.getElementById(\"formWrapper\").style.display = \"none\";\n        }\n    }\n\n\n    function addReport() {\n\n    }\n\n    return (\n        <li key={pr} style={{marginLeft: \"-30px\"}}>\n            <div id=\"formWrapper\" className=\"auth-wrapper\" style={{position: \"absolute\", display: \"none\"}}>\n                <div className=\"auth-inner\">\n                    <form>\n                        <h3>Request for payout</h3>\n\n                        <div className=\"form-group\">\n                            <label>Ether amount</label>\n                            <input id=\"etherAmount\" type=\"text\" className=\"form-control\" placeholder=\"Ether amount\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Intention</label>\n                            <textarea id=\"intention\" className=\"form-control\" placeholder=\"Intention\" style={{height: \"150px\"}}/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Reporting</label>\n                            <textarea id=\"reporting\" className=\"form-control\" placeholder=\"Reporting\" style={{height: \"150px\"}}/>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Days</label>\n                            <input id=\"days\" type=\"text\" className=\"form-control\" placeholder=\"Days\" />\n                        </div>\n\n                        <br/>\n                        <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => addReport()}>Request</button>\n                        <button type=\"button\" className=\"btn btn-secondary btn-block\" style={{marginLeft: \"175px\"}}\n                                onClick={() => setReportFormVisibility(false)}>Cancel</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"bg-light m-5 p-3 fpWrapper\" style={{borderRadius: \"15px\"}}>\n                <h3 className=\"p-3\">Requested sum: {payoutRequest.ethAmount}</h3>\n                <div className=\"p-3\">Intention: {payoutRequest.intention}</div>\n                <div className=\"p-3\">Promised report: {payoutRequest.reporting}</div>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm\">Due date: {payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))}</div>\n                    <div className=\"col-sm\">Count of approves: {payoutRequest.countOfApproves}</div>\n                    <div className=\"col-sm\">Required amount of approves: {payoutRequest.requiredAmountOfApproves}</div>\n                </div>\n                {isInvestor && !isApproved &&\n                    <button id=\"startBtn\" type=\"button\" className=\"m-2 btn btn-primary\" onClick={() => approve()}>Approve</button>\n                }\n                {currentUserId === payoutRequest.fundraisingProject.founder.id &&\n                    <div>\n                        <button id=\"addReport\" type=\"button\" className=\"m-2 btn btn-primary\" onClick={() => setReportFormVisibility(true)}>Add report</button>\n                    </div>\n                }\n            </div>\n        </li>\n    )\n}"]},"metadata":{},"sourceType":"module"}