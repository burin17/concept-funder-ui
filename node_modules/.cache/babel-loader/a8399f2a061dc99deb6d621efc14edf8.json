{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport web3 from \"./contract/web3\";\nexport default function PayoutRequest({\n  pr,\n  fpId,\n  account,\n  currentUserId\n}) {\n  const _React$useState = React.useState(pr),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        payoutRequest = _React$useState2[0],\n        setPayoutRequest = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isInvestor = _React$useState4[0],\n        setIsInvestor = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isApproved = _React$useState6[0],\n        setIsApproved = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLoaded = _React$useState8[0],\n        loaded = _React$useState8[1];\n\n  useEffect(() => {\n    setPayoutRequest(pr);\n    loadData();\n  }, [pr]);\n\n  async function loadData() {\n    // isCurrentUser investor\n    await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsInvestor(data);\n    });\n    await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsApproved(data);\n      console.log(2);\n    });\n  }\n\n  if (isLoaded) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  async function approve() {\n    const countOfApproves = await crowdfundPR(pr.contractAddress).methods.approve().send({\n      from: account\n    }).then(res => {\n      console.log(res.events.Approved.returnValues);\n      return parseInt(res.events.Approved.returnValues.countOfApproves);\n    });\n\n    const _pr = await fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" + pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n      method: \"POST\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(resp => {\n      resp.json();\n      setIsApproved(true);\n    });\n\n    setPayoutRequest(_pr);\n  }\n\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    style: {\n      borderRadius: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Requested sum: \", payoutRequest.ethAmount), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Intention: \", payoutRequest.intention), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Promised report: \", payoutRequest.reporting), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Due date: \", payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Count of approves: \", payoutRequest.countOfApproves), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Required amount of approves: \", payoutRequest.requiredAmountOfApproves)), isInvestor && !isApproved && React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => approve(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Approve\")));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js"],"names":["React","useState","useEffect","web3","PayoutRequest","pr","fpId","account","currentUserId","payoutRequest","setPayoutRequest","isInvestor","setIsInvestor","isApproved","setIsApproved","isLoaded","loaded","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","id","console","log","approve","countOfApproves","crowdfundPR","contractAddress","methods","send","from","res","events","Approved","returnValues","parseInt","_pr","resp","borderRadius","ethAmount","intention","reporting","achieveBy","substring","indexOf","requiredAmountOfApproves"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport web3 from \"./contract/web3\";\n\nexport default function PayoutRequest({pr, fpId, account, currentUserId}) {\n    const [payoutRequest, setPayoutRequest] = React.useState(pr);\n    const [isInvestor, setIsInvestor] = React.useState(false);\n    const [isApproved, setIsApproved] = React.useState(false);\n    const [isLoaded, loaded] = React.useState(false);\n\n    useEffect(() =>{\n        setPayoutRequest(pr);\n        loadData();\n    }, [pr])\n\n    async function loadData() {\n        // isCurrentUser investor\n        await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsInvestor(data);\n            });\n        await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsApproved(data);\n                console.log(2)\n        });\n    }\n\n    if (isLoaded) {\n        return <div></div>\n    }\n\n    async function approve() {\n        const countOfApproves = await crowdfundPR(pr.contractAddress).methods.approve().send({\n            from: account\n        }).then(res => {\n            console.log(res.events.Approved.returnValues);\n            return parseInt(res.events.Approved.returnValues.countOfApproves);\n        })\n        const _pr = await fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" +\n            pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n            method: \"POST\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken,\n            }),\n        }).then(resp => {\n            resp.json()\n            setIsApproved(true);\n        })\n        setPayoutRequest(_pr);\n    }\n\n    return (\n        <li>\n            <div className=\"bg-light m-5 p-3 fpWrapper\" style={{borderRadius: \"15px\"}}>\n                <h3 className=\"p-3\">Requested sum: {payoutRequest.ethAmount}</h3>\n                <div className=\"p-3\">Intention: {payoutRequest.intention}</div>\n                <div className=\"p-3\">Promised report: {payoutRequest.reporting}</div>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm\">Due date: {payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))}</div>\n                    <div className=\"col-sm\">Count of approves: {payoutRequest.countOfApproves}</div>\n                    <div className=\"col-sm\">Required amount of approves: {payoutRequest.requiredAmountOfApproves}</div>\n                </div>\n                {isInvestor && !isApproved &&\n                    <button id=\"startBtn\" type=\"button\" className=\"m-2 btn btn-primary\" onClick={() => approve()}>Approve</button>\n                }\n            </div>\n        </li>\n    )\n}"]},"metadata":{},"sourceType":"module"}