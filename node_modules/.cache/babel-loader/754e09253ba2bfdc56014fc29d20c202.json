{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport crowdfundInstance from '../contract/crowdfundInstance';\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\nimport web3 from '../contract/web3';\nexport default function FundraisingProjectDetails() {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        fProj = _React$useState2[0],\n        setFp = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        accounts = _React$useState4[0],\n        setAccounts = _React$useState4[1];\n\n  function invest() {\n    const ethAmount = document.getElementById(\"ethAmount\").value;\n    const contractAddress = fProj.contractAddress;\n    crowdfundProject(contractAddress).methods.contribute().send({\n      from: accounts[0],\n      value: web3.utils.toWei(String(ethAmount), 'ether')\n    }).then(res => {\n      const currentAmount = parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000;\n      fProj.currentAmount = currentAmount;\n      fetch(\"http://localhost:18080/fundraising-projects/invest?id=\" + fProj.fundraisingProjectId + \"&currentAmount=\" + currentAmount, {\n        method: 'POST',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(response => response.json()).then(data => {\n        setFp(data);\n      });\n    });\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:18080/fundraising-projects/\" + fProj.fundraisingProjectId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setFp(data);\n    });\n    web3.eth.getAccounts().then(accounts => {\n      setAccounts(accounts);\n    });\n  });\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Hello\"), React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, fProj.title), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, fProj.description), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"User: \", fProj.founder.username), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Goal: \", fProj.amountGoal, \" ETH\"), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Due date: \", fProj.duration.substring(0, fProj.duration.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Days: \", fProj.days), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Raised: \", fProj.currentAmount, \" ETH\")), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Tags: \"), React.createElement(\"div\", {\n    className: \"input-group m-2 w-25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"ethAmount\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"ETH amount\",\n    \"aria-label\": \"ETH amount\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => invest(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Contribute\"))));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/FundraisingProject/FundraisingProjectDetails.js"],"names":["React","useState","useEffect","crowdfundInstance","crowdfundProject","web3","FundraisingProjectDetails","fProj","setFp","accounts","setAccounts","invest","ethAmount","document","getElementById","value","contractAddress","methods","contribute","send","from","utils","toWei","String","then","res","currentAmount","parseInt","events","FundingReceived","returnValues","currentTotal","fetch","fundraisingProjectId","method","headers","Headers","sessionStorage","jwtToken","response","json","data","eth","getAccounts","title","description","founder","username","amountGoal","duration","substring","indexOf","days"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport crowdfundInstance from '../contract/crowdfundInstance';\nimport crowdfundProject from '../contract/crowdfundProjectInstance';\nimport web3 from '../contract/web3';\n\nexport default function FundraisingProjectDetails() {\n    const [fProj, setFp] = React.useState();\n    const [accounts, setAccounts] = React.useState([]);\n\n    function invest() {\n        const ethAmount = document.getElementById(\"ethAmount\").value;\n        const contractAddress = fProj.contractAddress;\n        crowdfundProject(contractAddress).methods.contribute().send({\n            from: accounts[0],\n            value: web3.utils.toWei(String(ethAmount), 'ether'),\n        }).then((res) => {\n            const currentAmount = (parseInt(res.events.FundingReceived.returnValues.currentTotal, 10) / 1000000000000000000);\n            fProj.currentAmount = currentAmount;\n            fetch(`http://localhost:18080/fundraising-projects/invest?id=` + fProj.fundraisingProjectId\n                + \"&currentAmount=\" + currentAmount, {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    setFp(data);\n                });\n        });\n    }\n\n    useEffect(() =>{\n        fetch(`http://localhost:18080/fundraising-projects/` + fProj.fundraisingProjectId,\n        {\n            method: 'GET',\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setFp(data);\n            });\n        web3.eth.getAccounts().then((accounts) => {\n            setAccounts(accounts);\n        });\n    })\n\n    return (\n        <li>\n            <div>Hello</div>\n            <div className=\"bg-light m-5 p-3 fpWrapper\">\n                <h2 className=\"p-3\">{fProj.title}</h2>\n                <div className=\"p-3\">{fProj.description}</div>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm\">User: {fProj.founder.username}</div>\n                    <div className=\"col-sm\">Goal: {fProj.amountGoal} ETH</div>\n                    <div className=\"col-sm\">Due date: {fProj.duration.substring(0, fProj.duration.indexOf('T'))}</div>\n                    <div className=\"col-sm\">Days: {fProj.days}</div>\n                    <div className=\"col-sm\">Raised: {fProj.currentAmount} ETH</div>\n                </div>\n                <div className=\"p-3\">Tags: </div>\n                <div className=\"input-group m-2 w-25\">\n                    <input id=\"ethAmount\" type=\"text\" className=\"form-control\" placeholder=\"ETH amount\"\n                           aria-label=\"ETH amount\" aria-describedby=\"basic-addon2\"/>\n                    <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\" onClick={() => invest()}>Contribute</button>\n                </div>\n            </div>\n        </li>\n    )\n}"]},"metadata":{},"sourceType":"module"}