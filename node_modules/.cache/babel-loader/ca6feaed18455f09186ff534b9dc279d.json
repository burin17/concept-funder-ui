{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/Messenger.js\";\nimport React from \"react\";\nimport \"./messenger.css\";\nimport { useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\nvar stompClient = null;\nexport default function Messenger() {\n  const _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        currentUser = _React$useState2[0],\n        setCurrentUser = _React$useState2[1];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        currentChat = _React$useState4[0],\n        setCurrentChat = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        messages = _React$useState6[0],\n        setMessages = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLoaded = _React$useState8[0],\n        loaded = _React$useState8[1];\n\n  const connect = () => {\n    const Stomp = require(\"stompjs\");\n\n    var SockJS = require(\"sockjs-client\");\n\n    SockJS = new SockJS(\"http://localhost:19080/ws\");\n    stompClient = Stomp.over(SockJS);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\"/user/\" + currentUser.id + \"/queue/messages\", onMessageReceived);\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const onMessageReceived = msg => {\n    currentChat.techSpecialist = msg.author;\n    console.log(msg + \"received; \" + currentChat);\n    const message = JSON.parse(msg.body);\n    document.getElementById(\"messengerUl\").innerHTML += \"\\n            <li class=\\\"messengerLiLeft\\\">\\n                <div class=\\\"msgContentWrapper\\\">\".concat(message.content, \"</div>\\n            </li>\\n        \"); // setMessages([...messages, message]);\n  };\n\n  const sendMessage = () => {\n    let message;\n\n    if (currentChat.techSpecialist != null) {\n      message = {\n        chatId: currentChat.chatId,\n        senderId: currentUser.id,\n        receiverId: currentChat.techSpecialist.id,\n        content: document.getElementById(\"messageContent\").value\n      };\n    } else {\n      message = {\n        chatId: currentChat.chatId,\n        senderId: currentUser.id,\n        content: document.getElementById(\"messageContent\").value\n      };\n    }\n\n    stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n    message.author = {};\n    message.author.username = currentUser.username;\n    console.log(message); // const newMessages = [...messages];\n    // newMessages.push(message);\n    // setMessages(newMessages);\n\n    document.getElementById(\"messageContent\").value = \"\";\n    document.getElementById(\"messengerUl\").innerHTML += \"\\n            <li class=\\\"messengerLiRight\\\">\\n                <div class=\\\"msgContentWrapper\\\">\".concat(message.content, \"</div>\\n            </li>\\n        \");\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    });\n    await fetch(\"http://localhost:18080/tech-support/unresolved\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentChat(data);\n      fetch(\"http://localhost:18080/tech-support/chat/\" + data.chatId, {\n        method: 'GET',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(response => response.json()).then(data => {\n        setMessages(data);\n      }).then(() => loaded(true));\n    }).catch(() => {\n      fetch(\"http://localhost:18080/tech-support/start-chat\", {\n        method: 'POST',\n        headers: new Headers({\n          \"Authorization\": sessionStorage.jwtToken\n        })\n      }).then(resp => resp.json()).then(data => {\n        setCurrentChat(data);\n        fetch(\"http://localhost:18080/tech-support/chat/\" + data.chatId, {\n          method: 'GET',\n          headers: new Headers({\n            \"Authorization\": sessionStorage.jwtToken\n          })\n        }).then(response => response.json()).then(data => {\n          setMessages(data);\n        }).then(() => loaded(true));\n      });\n    });\n  }\n\n  if (isLoaded === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    });\n  }\n\n  function markAsClosed() {\n    fetch(\"http://localhost:18080/tech-support/mark-as-solved?chatId=\" + currentChat.chatId, {\n      method: \"PATCH\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    });\n    document.getElementById(\"closeBtn\").style.display = \"none\";\n  }\n\n  function send() {\n    const content = document.getElementById(\"messageContent\").value;\n    fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + currentChat.chatId + \"&content=\" + content, {\n      method: 'POST',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(resp => resp.json()).then(data => setMessages([...messages, data])).then(() => document.getElementById(\"messageContent\").value = \"\");\n  } // const messages = [\n  //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n  //     {content:\"Hello!\", author: {username:\"testuser\"}},\n  //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n  // ];\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, connect(), React.createElement(\"li\", {\n    style: {\n      marginLeft: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"techSupportText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Tech support dialog\"), messages.length === 0 && React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"60px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Ask your question here..\"), React.createElement(\"ul\", {\n    id: \"messengerUl\",\n    className: \"messengerUl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, messages.map(msg => {\n    if (currentUser.username === msg.author.username) {\n      return React.createElement(\"li\", {\n        className: \"messengerLiRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, msg.content));\n    } else {\n      return React.createElement(\"li\", {\n        className: \"messengerLiLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msgContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, msg.content));\n    }\n  })), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: 30,\n    src: \"/images/att.png\",\n    alt: \"Attach\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    id: \"messageContent\",\n    type: \"text\",\n    className: \"form-control\",\n    \"aria-describedby\": \"basic-addon2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => sendMessage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"button\", {\n    id: \"closeBtn\",\n    type: \"button\",\n    className: \"btn btn-primary\",\n    style: {\n      marginTop: \"10px\",\n      marginLeft: '790px'\n    },\n    onClick: () => markAsClosed(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Close chat\"))));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/Messenger.js"],"names":["React","useEffect","SockJS","stompClient","Messenger","useState","currentUser","setCurrentUser","currentChat","setCurrentChat","messages","setMessages","isLoaded","loaded","connect","Stomp","require","over","onConnected","onError","console","log","subscribe","id","onMessageReceived","err","msg","techSpecialist","author","message","JSON","parse","body","document","getElementById","innerHTML","content","sendMessage","chatId","senderId","receiverId","value","send","stringify","username","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","catch","resp","markAsClosed","style","display","marginLeft","length","textAlign","padding","map","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./messenger.css\"\nimport {useEffect} from \"react\";\nimport SockJS from \"sockjs-client\";\n\nvar stompClient = null;\nexport default function Messenger() {\n    const [currentUser, setCurrentUser] = React.useState();\n    const [currentChat, setCurrentChat] = React.useState();\n    const [messages, setMessages] = React.useState([]);\n    const [isLoaded, loaded] = React.useState(false);\n\n    const connect = () => {\n        const Stomp = require(\"stompjs\");\n        var SockJS = require(\"sockjs-client\");\n        SockJS = new SockJS(\"http://localhost:19080/ws\");\n        stompClient = Stomp.over(SockJS);\n        stompClient.connect({}, onConnected, onError);\n    };\n\n    const onConnected = () => {\n        console.log(\"connected\");\n        console.log(currentUser);\n        stompClient.subscribe(\n            \"/user/\" + currentUser.id + \"/queue/messages\",\n            onMessageReceived\n        );\n    };\n\n    const onError = (err) => {\n        console.log(err);\n    };\n\n\n    const onMessageReceived = (msg) => {\n        currentChat.techSpecialist = msg.author;\n        console.log(msg + \"received; \" + currentChat);\n        const message = JSON.parse(msg.body);\n        document.getElementById(\"messengerUl\").innerHTML += `\n            <li class=\"messengerLiLeft\">\n                <div class=\"msgContentWrapper\">${message.content}</div>\n            </li>\n        `\n        // setMessages([...messages, message]);\n    };\n\n    const sendMessage = () => {\n        let message;\n        if (currentChat.techSpecialist != null) {\n            message = {\n                chatId: currentChat.chatId,\n                senderId: currentUser.id,\n                receiverId: currentChat.techSpecialist.id,\n                content: document.getElementById(\"messageContent\").value,\n            };\n        } else {\n            message = {\n                chatId: currentChat.chatId,\n                senderId: currentUser.id,\n                content: document.getElementById(\"messageContent\").value,\n            };\n        }\n        stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n\n        message.author = {};\n        message.author.username = currentUser.username;\n\n        console.log(message);\n\n        // const newMessages = [...messages];\n        // newMessages.push(message);\n        // setMessages(newMessages);\n\n        document.getElementById(\"messageContent\").value = \"\";\n        document.getElementById(\"messengerUl\").innerHTML += `\n            <li class=\"messengerLiRight\">\n                <div class=\"msgContentWrapper\">${message.content}</div>\n            </li>\n        `\n    };\n\n    useEffect(() => {\n        loadData();\n    }, [])\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            });\n\n        await fetch(`http://localhost:18080/tech-support/unresolved`,{\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                    setCurrentChat(data);\n                    fetch(`http://localhost:18080/tech-support/chat/` + data.chatId,\n                        {\n                            method: 'GET',\n                            headers: new Headers({\n                                \"Authorization\": sessionStorage.jwtToken\n                            })\n                        })\n                        .then(response => response.json())\n                        .then(data => {\n                            setMessages(data);\n                        })\n                        .then(() => loaded(true));\n            }).catch(() => {\n                fetch(\"http://localhost:18080/tech-support/start-chat\",\n                    {\n                        method: 'POST',\n                        headers: new Headers({\n                            \"Authorization\": sessionStorage.jwtToken\n                        })\n                    })\n                    .then(resp => resp.json())\n                    .then(data => {\n                            setCurrentChat(data);\n                            fetch(`http://localhost:18080/tech-support/chat/` + data.chatId,\n                                {\n                                    method: 'GET',\n                                    headers: new Headers({\n                                        \"Authorization\": sessionStorage.jwtToken\n                                    })\n                                })\n                                .then(response => response.json())\n                                .then(data => {\n                                    setMessages(data);\n                                })\n                                .then(() => loaded(true));\n                        }\n                    )\n            })\n    }\n\n    if (isLoaded === false) {\n        return <div></div>\n    }\n\n    function markAsClosed() {\n        fetch(\"http://localhost:18080/tech-support/mark-as-solved?chatId=\" + currentChat.chatId, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        })\n        document.getElementById(\"closeBtn\").style.display = \"none\";\n    }\n\n    function send() {\n        const content = document.getElementById(\"messageContent\").value;\n        fetch(\"http://localhost:18080/tech-support/send-message?chatId=\" + currentChat.chatId + \"&content=\" + content,\n            {\n                method: 'POST',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            }).then(resp => resp.json())\n              .then(data => setMessages([...messages, data]))\n                .then(() => document.getElementById(\"messageContent\").value = \"\");\n    }\n\n\n\n    // const messages = [\n    //     {content:\"Hi!\", author: {username:\"ivanov\"}},\n    //     {content:\"Hello!\", author: {username:\"testuser\"}},\n    //     {content:\"New to React and trying to loop Object attributes but React complains about Objects not being valid React children, can someone please give me some advice on how to resolve this problem? I've added createFragment but not completely sure where this needs to go or what approach I should take?\", author: {username:\"ivanov\"}},\n    // ];\n\n    return (\n        <div>\n            {connect()}\n            <li style={{marginLeft: 35}}>\n                <div className=\"bg-light m-5 p-3 fpWrapper\">\n                    <div className=\"techSupportText\">Tech support dialog</div>\n                    {messages.length === 0 &&\n                        <div style={{textAlign: \"center\", padding: \"60px\"}}>Ask your question here..</div>\n                    }\n                    <ul id=\"messengerUl\" className=\"messengerUl\">\n                        {messages.map(msg => {\n                                if (currentUser.username === msg.author.username) {\n                                    return <li className=\"messengerLiRight\">\n                                            <div className=\"msgContentWrapper\">{msg.content}</div>\n                                           </li>\n                                } else {\n                                    return <li className=\"messengerLiLeft\">\n                                            <div className=\"msgContentWrapper\">{msg.content}</div>\n                                           </li>\n                                }\n                            })\n                        }\n                    </ul>\n\n                    <div className=\"input-group\">\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\"><img width={30} src=\"/images/att.png\" alt=\"Attach\"/></button>\n                        <input id=\"messageContent\" type=\"text\" className=\"form-control\" aria-describedby=\"basic-addon2\"/>\n                        <button id=\"startBtn\" type=\"button\" className=\"btn btn-primary\" onClick={() => sendMessage()}>Send</button>\n                    </div>\n                    <button id=\"closeBtn\" type=\"button\" className=\"btn btn-primary\"\n                            style={{marginTop: \"10px\", marginLeft: '790px'}}\n                            onClick={() => markAsClosed()}>\n                        Close chat\n                    </button>\n                </div>\n            </li>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}