{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/ChatList.js\";\nimport React from 'react';\nimport Chat from \"./Chat\";\nimport { useEffect } from \"react\";\nexport default function ChatList() {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        allChats = _React$useState2[0],\n        setAllChats = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        assignedChats = _React$useState4[0],\n        setAssignedChats = _React$useState4[1];\n\n  const _React$useState5 = React.useState(),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        currentUser = _React$useState6[0],\n        setCurrentUser = _React$useState6[1];\n\n  const _React$useState7 = React.useState(false),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isLoaded = _React$useState8[0],\n        loaded = _React$useState8[1];\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  async function loadData() {\n    await fetch(\"http://localhost:18080/user/selfProfile\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n    });\n    await fetch(\"http://localhost:18080/tech-support/unassigned-chats\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setAllChats(data);\n    });\n    await fetch(\"http://localhost:18080/tech-support/all-chats\", {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setAssignedChats(data);\n    }).then(() => loaded(true));\n  }\n\n  if (isLoaded === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      marginLeft: \"80px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Waiting for help\"), React.createElement(\"ul\", {\n    style: {\n      listStyle: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, allChats !== undefined && allChats.map(chat => {\n    return React.createElement(Chat, {\n      chat: chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  })), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Started chats\"), React.createElement(\"ul\", {\n    style: {\n      listStyle: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, assignedChats !== undefined && assignedChats.map(chat => {\n    return React.createElement(Chat, {\n      chat: chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/ChatList.js"],"names":["React","Chat","useEffect","ChatList","useState","allChats","setAllChats","assignedChats","setAssignedChats","currentUser","setCurrentUser","isLoaded","loaded","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","data","marginLeft","listStyle","undefined","map","chat"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Chat from \"./Chat\";\nimport {useEffect} from \"react\";\n\nexport default function ChatList() {\n    const [allChats, setAllChats] = React.useState([]);\n    const [assignedChats, setAssignedChats] = React.useState([]);\n    const [currentUser, setCurrentUser] = React.useState();\n    const [isLoaded, loaded] = React.useState(false);\n\n    useEffect(() => {\n        loadData();\n    },[]);\n\n    async function loadData() {\n        await fetch(`http://localhost:18080/user/selfProfile`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setCurrentUser(data);\n            });\n        await fetch(`http://localhost:18080/tech-support/unassigned-chats`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setAllChats(data);\n            });\n        await fetch(`http://localhost:18080/tech-support/all-chats`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setAssignedChats(data);\n            })\n            .then(() => loaded(true));\n    }\n\n    if (isLoaded === false) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <h2 style={{marginLeft: \"80px\"}}>Waiting for help</h2>\n            <ul style={{listStyle: \"none\"}}>\n                {allChats !== undefined && allChats.map(chat => {\n                    return <Chat chat={chat}/>\n                })}\n            </ul>\n            <h2>Started chats</h2>\n            <ul style={{listStyle: \"none\"}}>\n                {assignedChats !== undefined && assignedChats.map(chat => {\n                    return <Chat chat={chat}/>\n                })}\n            </ul>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}