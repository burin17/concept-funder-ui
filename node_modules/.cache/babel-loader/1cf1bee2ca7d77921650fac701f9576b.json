{"ast":null,"code":"import _slicedToArray from \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js\";\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useEffect } from \"react\";\nimport web3 from \"./contract/web3\";\nimport crowdfundProject from './contract/crowdfundProjectInstance';\nimport data from \"bootstrap/js/src/dom/data\";\nexport default function PayoutRequest({\n  pr,\n  fpId,\n  account,\n  currentUserId,\n  fpContractAddress\n}) {\n  const _React$useState = React.useState(pr),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        payoutRequest = _React$useState2[0],\n        setPayoutRequest = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        isInvestor = _React$useState4[0],\n        setIsInvestor = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isApproved = _React$useState6[0],\n        setIsApproved = _React$useState6[1];\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        reportFiles = _useState2[0],\n        setReportFiles = _useState2[1];\n\n  useEffect(() => {\n    setPayoutRequest(pr);\n    loadData();\n  }, [pr]);\n\n  async function loadData() {\n    // isCurrentUser investor\n    await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsInvestor(data);\n    });\n    await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => response.json()).then(data => {\n      setIsApproved(data);\n      console.log(2);\n    });\n    await fetch(\"http://localhost:18080/api/payout-requests/other-files/\" + fpId, {\n      method: 'GET',\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else return undefined;\n    }).then(data => {\n      setOtherFiles(data);\n    });\n  }\n\n  function approve() {\n    crowdfundProject(fpContractAddress).methods.approveRequest(pr.requestIdx).send({\n      from: account\n    }).then(res => {\n      console.log(res.events.Approved.returnValues);\n      return parseInt(res.events.Approved.returnValues.countOfApproves);\n    }).then(countOfApproves => fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" + pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n      method: \"POST\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      })\n    })).then(resp => resp.json()).then(data => {\n      setPayoutRequest(data);\n    }).then(data => {\n      setIsApproved(true);\n    });\n  }\n\n  function setReportFormVisibility(isVisible) {\n    if (isVisible) {\n      document.getElementById(\"reportFormWrapper\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"reportFormWrapper\").style.display = \"none\";\n    }\n  }\n\n  function addReport() {\n    const reportFormData = new FormData();\n\n    if (reportFiles.length > 0) {\n      for (const file of reportFiles) {\n        reportFormData.append(\"files\", file);\n      }\n    }\n\n    const notes = document.getElementById(\"reportNotes\").value;\n    fetch(\"http://localhost:18080/api/payout-requests/addReport/\" + payoutRequest.id + \"?notes=\" + notes, {\n      method: \"PUT\",\n      headers: new Headers({\n        \"Authorization\": sessionStorage.jwtToken\n      }),\n      body: reportFormData\n    }).then(resp => resp.json()).then(data => setPayoutRequest(data));\n  }\n\n  function addReportFile(event) {\n    setReportFiles([...reportFiles, event.target.files[0]]);\n    document.getElementById(\"selectedReportFilesWrapper\").style.display = \"block\";\n    document.getElementById(\"selectedReportFilesWrapper\").innerHTML += \"<div>\".concat(event.target.files[0].name, \"</div>\");\n    event.target.value = '';\n  }\n\n  return React.createElement(\"li\", {\n    key: pr,\n    style: {\n      marginLeft: \"-30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"reportFormWrapper\",\n    className: \"auth-wrapper\",\n    style: {\n      position: \"fixed\",\n      top: \"-50px\",\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Add report\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"textarea\", {\n    id: \"reportNotes\",\n    className: \"form-control\",\n    placeholder: \"Notes\",\n    style: {\n      height: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"reportFilesWrapper\",\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Attach files\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    onChange: addReportFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"selectedReportFilesWrapper\",\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Files: \")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block\",\n    onClick: () => addReport(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-block\",\n    style: {\n      marginLeft: \"175px\"\n    },\n    onClick: () => setReportFormVisibility(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Cancel\")))), React.createElement(\"div\", {\n    className: \"bg-light m-5 p-3 fpWrapper\",\n    style: {\n      borderRadius: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Requested sum: \", payoutRequest.ethAmount), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Intention: \", payoutRequest.intention), React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Promised report: \", payoutRequest.reporting), React.createElement(\"div\", {\n    className: \"row p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Due date: \", payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Count of approves: \", payoutRequest.countOfApproves), React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Required amount of approves: \", payoutRequest.requiredAmountOfApproves), payoutRequest.countOfApproves >= payoutRequest.requiredAmountOfApproves && payoutRequest.reportNotes === null && React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"STATUS: PAID OUT\"), payoutRequest.countOfApproves < payoutRequest.requiredAmountOfApproves && payoutRequest.reportNotes === null && React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"STATUS: WAITING FOR APPROVE\"), payoutRequest.reportNotes !== null && React.createElement(\"div\", {\n    className: \"col-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"STATUS: REPORTED\")), payoutRequest.reportNotes !== null && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), isInvestor && !isApproved && React.createElement(\"button\", {\n    id: \"startBtn\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => approve(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Approve\"), currentUserId === payoutRequest.fundraisingProject.founder.id && payoutRequest.reportNotes === null && payoutRequest.countOfApproves >= payoutRequest.requiredAmountOfApproves && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"addReport\",\n    type: \"button\",\n    className: \"m-2 btn btn-primary\",\n    onClick: () => setReportFormVisibility(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Add report\")), payoutRequest.reportNotes !== null && React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Report: \", payoutRequest.reportNotes)));\n}","map":{"version":3,"sources":["/home/burin17/proj/diploma/concept-funder/concept-funder-ui/src/PayoutRequest.js"],"names":["React","useState","useEffect","web3","crowdfundProject","data","PayoutRequest","pr","fpId","account","currentUserId","fpContractAddress","payoutRequest","setPayoutRequest","isInvestor","setIsInvestor","isApproved","setIsApproved","reportFiles","setReportFiles","loadData","fetch","method","headers","Headers","sessionStorage","jwtToken","then","response","json","id","console","log","status","undefined","setOtherFiles","approve","methods","approveRequest","requestIdx","send","from","res","events","Approved","returnValues","parseInt","countOfApproves","resp","setReportFormVisibility","isVisible","document","getElementById","style","display","addReport","reportFormData","FormData","length","file","append","notes","value","body","addReportFile","event","target","files","innerHTML","name","marginLeft","position","top","height","borderRadius","ethAmount","intention","reporting","achieveBy","substring","indexOf","requiredAmountOfApproves","reportNotes","fundraisingProject","founder"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useEffect} from \"react\";\nimport web3 from \"./contract/web3\";\nimport crowdfundProject from './contract/crowdfundProjectInstance';\nimport data from \"bootstrap/js/src/dom/data\";\n\nexport default function PayoutRequest({pr, fpId, account, currentUserId, fpContractAddress}) {\n    const [payoutRequest, setPayoutRequest] = React.useState(pr);\n    const [isInvestor, setIsInvestor] = React.useState(false);\n    const [isApproved, setIsApproved] = React.useState(false);\n    const [reportFiles, setReportFiles] = useState([]);\n\n    useEffect(() =>{\n        setPayoutRequest(pr);\n        loadData();\n    }, [pr])\n\n    async function loadData() {\n        // isCurrentUser investor\n        await fetch(\"http://localhost:18080/user/isInvestor?fpId=\" + fpId, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsInvestor(data);\n            });\n        await fetch(\"http://localhost:18080/payout-requests/isApproved?prId=\" + pr.id, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            })\n        }).then(response => response.json())\n            .then(data => {\n                setIsApproved(data);\n                console.log(2)\n        });\n\n        await fetch(`http://localhost:18080/api/payout-requests/other-files/` + fpId,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    \"Authorization\": sessionStorage.jwtToken\n                })\n            })\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json()\n                } else return undefined;\n            })\n            .then(data => {\n                setOtherFiles(data);\n            });\n    }\n\n\n    function approve() {\n        crowdfundProject(fpContractAddress).methods.approveRequest(pr.requestIdx).send({\n            from: account\n        }).then(res => {\n            console.log(res.events.Approved.returnValues);\n            return parseInt(res.events.Approved.returnValues.countOfApproves);\n        }).then(countOfApproves =>\n            fetch(\"http://localhost:18080/payout-requests/approve?payoutRequestId=\" +\n            pr.id + \"&approverId=\" + currentUserId + \"&countOfApproves=\" + countOfApproves, {\n            method: \"POST\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken,\n            }),\n        }))\n            .then(resp => resp.json())\n          .then(data => {\n            setPayoutRequest(data);\n        }).then(data => {\n            setIsApproved(true);\n        })\n    }\n\n    function setReportFormVisibility(isVisible) {\n        if (isVisible) {\n            document.getElementById(\"reportFormWrapper\").style.display = \"flex\";\n        } else {\n            document.getElementById(\"reportFormWrapper\").style.display = \"none\";\n        }\n    }\n\n\n    function addReport() {\n        const reportFormData = new FormData();\n        if (reportFiles.length > 0) {\n            for (const file of reportFiles) {\n                reportFormData.append(\"files\", file);\n            }\n        }\n        const notes = document.getElementById(\"reportNotes\").value;\n        fetch(\"http://localhost:18080/api/payout-requests/addReport/\" + payoutRequest.id + \"?notes=\" + notes, {\n            method: \"PUT\",\n            headers: new Headers({\n                \"Authorization\": sessionStorage.jwtToken\n            }),\n            body: reportFormData\n        }).then(resp => resp.json())\n            .then(data => setPayoutRequest(data));\n    }\n\n    function addReportFile(event) {\n        setReportFiles([...reportFiles,event.target.files[0]]);\n        document.getElementById(\"selectedReportFilesWrapper\").style.display = \"block\";\n        document.getElementById(\"selectedReportFilesWrapper\").innerHTML +=\n            `<div>${event.target.files[0].name}</div>`\n        event.target.value = '';\n    }\n\n    return (\n        <li key={pr} style={{marginLeft: \"-30px\"}}>\n            <div id=\"reportFormWrapper\" className=\"auth-wrapper\" style={{position: \"fixed\", top: \"-50px\", display: \"none\"}}>\n                <div className=\"auth-inner\">\n                    <form>\n                        <h3>Add report</h3>\n\n                        <div className=\"form-group\">\n                            <label>Notes</label>\n                            <textarea id=\"reportNotes\" className=\"form-control\" placeholder=\"Notes\" style={{height: \"150px\"}}/>\n                        </div>\n\n                        <div id=\"reportFilesWrapper\" className=\"form-group\">\n                            <label>Attach files</label><br/>\n                            <input type=\"file\" onChange={addReportFile}/>\n                        </div>\n\n                        <div id=\"selectedReportFilesWrapper\" style={{display: 'none'}}>\n                            <label>Files: </label>\n                        </div>\n\n                        <br/>\n                        <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => addReport()}>Save</button>\n                        <button type=\"button\" className=\"btn btn-secondary btn-block\" style={{marginLeft: \"175px\"}}\n                                onClick={() => setReportFormVisibility(false)}>Cancel</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"bg-light m-5 p-3 fpWrapper\" style={{borderRadius: \"15px\"}}>\n                <h3 className=\"p-3\">Requested sum: {payoutRequest.ethAmount}</h3>\n                <div className=\"p-3\">Intention: {payoutRequest.intention}</div>\n                <div className=\"p-3\">Promised report: {payoutRequest.reporting}</div>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm\">Due date: {payoutRequest.achieveBy.substring(0, payoutRequest.achieveBy.indexOf('T'))}</div>\n                    <div className=\"col-sm\">Count of approves: {payoutRequest.countOfApproves}</div>\n                    <div className=\"col-sm\">Required amount of approves: {payoutRequest.requiredAmountOfApproves}</div>\n                    {payoutRequest.countOfApproves >= payoutRequest.requiredAmountOfApproves && payoutRequest.reportNotes === null &&\n                        <div className=\"col-sm\">STATUS: PAID OUT</div>\n                    }\n                    {payoutRequest.countOfApproves < payoutRequest.requiredAmountOfApproves && payoutRequest.reportNotes === null &&\n                        <div className=\"col-sm\">STATUS: WAITING FOR APPROVE</div>\n                    }\n                    {payoutRequest.reportNotes !== null &&\n                        <div className=\"col-sm\">STATUS: REPORTED</div>\n                    }\n                </div>\n                {payoutRequest.reportNotes !== null &&\n                    <div>\n\n                    </div>\n                }\n                {isInvestor && !isApproved &&\n                    <button id=\"startBtn\" type=\"button\" className=\"m-2 btn btn-primary\" onClick={() => approve()}>Approve</button>\n                }\n                {currentUserId === payoutRequest.fundraisingProject.founder.id && payoutRequest.reportNotes === null && payoutRequest.countOfApproves >= payoutRequest.requiredAmountOfApproves &&\n                    <div>\n                        <button id=\"addReport\" type=\"button\" className=\"m-2 btn btn-primary\" onClick={() => setReportFormVisibility(true)}>Add report</button>\n                    </div>\n                }\n                {payoutRequest.reportNotes !== null &&\n                    <div className=\"p-3\">Report: {payoutRequest.reportNotes}</div>\n\n                }\n            </div>\n        </li>\n    )\n}"]},"metadata":{},"sourceType":"module"}